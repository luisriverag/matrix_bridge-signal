//*
// Copyright (C) 2019 Open Whisper Systems
//
// Licensed according to the LICENSE file in this repository.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.21.12
// source: StorageService.proto

package signalpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

import _ "embed"

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OptionalBool int32

const (
	OptionalBool_UNSET    OptionalBool = 0
	OptionalBool_ENABLED  OptionalBool = 1
	OptionalBool_DISABLED OptionalBool = 2
)

// Enum value maps for OptionalBool.
var (
	OptionalBool_name = map[int32]string{
		0: "UNSET",
		1: "ENABLED",
		2: "DISABLED",
	}
	OptionalBool_value = map[string]int32{
		"UNSET":    0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x OptionalBool) Enum() *OptionalBool {
	p := new(OptionalBool)
	*p = x
	return p
}

func (x OptionalBool) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OptionalBool) Descriptor() protoreflect.EnumDescriptor {
	return file_StorageService_proto_enumTypes[0].Descriptor()
}

func (OptionalBool) Type() protoreflect.EnumType {
	return &file_StorageService_proto_enumTypes[0]
}

func (x OptionalBool) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OptionalBool.Descriptor instead.
func (OptionalBool) EnumDescriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{0}
}

// If unset - computed as the value of the first byte of SHA-256(msg=CONTACT_ID)
// modulo the count of colors. Once set the avatar color for a recipient is
// never recomputed or changed.
//
// `CONTACT_ID` is the first available identifier from the list:
// - ServiceIdToBinary(ACI)
// - E164
// - ServiceIdToBinary(PNI)
// - Group Id
type AvatarColor int32

const (
	AvatarColor_A100 AvatarColor = 0
	AvatarColor_A110 AvatarColor = 1
	AvatarColor_A120 AvatarColor = 2
	AvatarColor_A130 AvatarColor = 3
	AvatarColor_A140 AvatarColor = 4
	AvatarColor_A150 AvatarColor = 5
	AvatarColor_A160 AvatarColor = 6
	AvatarColor_A170 AvatarColor = 7
	AvatarColor_A180 AvatarColor = 8
	AvatarColor_A190 AvatarColor = 9
	AvatarColor_A200 AvatarColor = 10
	AvatarColor_A210 AvatarColor = 11
)

// Enum value maps for AvatarColor.
var (
	AvatarColor_name = map[int32]string{
		0:  "A100",
		1:  "A110",
		2:  "A120",
		3:  "A130",
		4:  "A140",
		5:  "A150",
		6:  "A160",
		7:  "A170",
		8:  "A180",
		9:  "A190",
		10: "A200",
		11: "A210",
	}
	AvatarColor_value = map[string]int32{
		"A100": 0,
		"A110": 1,
		"A120": 2,
		"A130": 3,
		"A140": 4,
		"A150": 5,
		"A160": 6,
		"A170": 7,
		"A180": 8,
		"A190": 9,
		"A200": 10,
		"A210": 11,
	}
)

func (x AvatarColor) Enum() *AvatarColor {
	p := new(AvatarColor)
	*p = x
	return p
}

func (x AvatarColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AvatarColor) Descriptor() protoreflect.EnumDescriptor {
	return file_StorageService_proto_enumTypes[1].Descriptor()
}

func (AvatarColor) Type() protoreflect.EnumType {
	return &file_StorageService_proto_enumTypes[1]
}

func (x AvatarColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AvatarColor.Descriptor instead.
func (AvatarColor) EnumDescriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{1}
}

type ManifestRecord_Identifier_Type int32

const (
	ManifestRecord_Identifier_UNKNOWN                 ManifestRecord_Identifier_Type = 0
	ManifestRecord_Identifier_CONTACT                 ManifestRecord_Identifier_Type = 1
	ManifestRecord_Identifier_GROUPV1                 ManifestRecord_Identifier_Type = 2
	ManifestRecord_Identifier_GROUPV2                 ManifestRecord_Identifier_Type = 3
	ManifestRecord_Identifier_ACCOUNT                 ManifestRecord_Identifier_Type = 4
	ManifestRecord_Identifier_STORY_DISTRIBUTION_LIST ManifestRecord_Identifier_Type = 5
	ManifestRecord_Identifier_CALL_LINK               ManifestRecord_Identifier_Type = 7
	ManifestRecord_Identifier_CHAT_FOLDER             ManifestRecord_Identifier_Type = 8
)

// Enum value maps for ManifestRecord_Identifier_Type.
var (
	ManifestRecord_Identifier_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "CONTACT",
		2: "GROUPV1",
		3: "GROUPV2",
		4: "ACCOUNT",
		5: "STORY_DISTRIBUTION_LIST",
		7: "CALL_LINK",
		8: "CHAT_FOLDER",
	}
	ManifestRecord_Identifier_Type_value = map[string]int32{
		"UNKNOWN":                 0,
		"CONTACT":                 1,
		"GROUPV1":                 2,
		"GROUPV2":                 3,
		"ACCOUNT":                 4,
		"STORY_DISTRIBUTION_LIST": 5,
		"CALL_LINK":               7,
		"CHAT_FOLDER":             8,
	}
)

func (x ManifestRecord_Identifier_Type) Enum() *ManifestRecord_Identifier_Type {
	p := new(ManifestRecord_Identifier_Type)
	*p = x
	return p
}

func (x ManifestRecord_Identifier_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ManifestRecord_Identifier_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_StorageService_proto_enumTypes[2].Descriptor()
}

func (ManifestRecord_Identifier_Type) Type() protoreflect.EnumType {
	return &file_StorageService_proto_enumTypes[2]
}

func (x ManifestRecord_Identifier_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ManifestRecord_Identifier_Type.Descriptor instead.
func (ManifestRecord_Identifier_Type) EnumDescriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{5, 0, 0}
}

type ContactRecord_IdentityState int32

const (
	ContactRecord_DEFAULT    ContactRecord_IdentityState = 0
	ContactRecord_VERIFIED   ContactRecord_IdentityState = 1
	ContactRecord_UNVERIFIED ContactRecord_IdentityState = 2
)

// Enum value maps for ContactRecord_IdentityState.
var (
	ContactRecord_IdentityState_name = map[int32]string{
		0: "DEFAULT",
		1: "VERIFIED",
		2: "UNVERIFIED",
	}
	ContactRecord_IdentityState_value = map[string]int32{
		"DEFAULT":    0,
		"VERIFIED":   1,
		"UNVERIFIED": 2,
	}
)

func (x ContactRecord_IdentityState) Enum() *ContactRecord_IdentityState {
	p := new(ContactRecord_IdentityState)
	*p = x
	return p
}

func (x ContactRecord_IdentityState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContactRecord_IdentityState) Descriptor() protoreflect.EnumDescriptor {
	return file_StorageService_proto_enumTypes[3].Descriptor()
}

func (ContactRecord_IdentityState) Type() protoreflect.EnumType {
	return &file_StorageService_proto_enumTypes[3]
}

func (x ContactRecord_IdentityState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContactRecord_IdentityState.Descriptor instead.
func (ContactRecord_IdentityState) EnumDescriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{7, 0}
}

type GroupV2Record_StorySendMode int32

const (
	GroupV2Record_DEFAULT  GroupV2Record_StorySendMode = 0
	GroupV2Record_DISABLED GroupV2Record_StorySendMode = 1
	GroupV2Record_ENABLED  GroupV2Record_StorySendMode = 2
)

// Enum value maps for GroupV2Record_StorySendMode.
var (
	GroupV2Record_StorySendMode_name = map[int32]string{
		0: "DEFAULT",
		1: "DISABLED",
		2: "ENABLED",
	}
	GroupV2Record_StorySendMode_value = map[string]int32{
		"DEFAULT":  0,
		"DISABLED": 1,
		"ENABLED":  2,
	}
)

func (x GroupV2Record_StorySendMode) Enum() *GroupV2Record_StorySendMode {
	p := new(GroupV2Record_StorySendMode)
	*p = x
	return p
}

func (x GroupV2Record_StorySendMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupV2Record_StorySendMode) Descriptor() protoreflect.EnumDescriptor {
	return file_StorageService_proto_enumTypes[4].Descriptor()
}

func (GroupV2Record_StorySendMode) Type() protoreflect.EnumType {
	return &file_StorageService_proto_enumTypes[4]
}

func (x GroupV2Record_StorySendMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupV2Record_StorySendMode.Descriptor instead.
func (GroupV2Record_StorySendMode) EnumDescriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{9, 0}
}

type AccountRecord_PhoneNumberSharingMode int32

const (
	AccountRecord_UNKNOWN   AccountRecord_PhoneNumberSharingMode = 0
	AccountRecord_EVERYBODY AccountRecord_PhoneNumberSharingMode = 1
	AccountRecord_NOBODY    AccountRecord_PhoneNumberSharingMode = 2
)

// Enum value maps for AccountRecord_PhoneNumberSharingMode.
var (
	AccountRecord_PhoneNumberSharingMode_name = map[int32]string{
		0: "UNKNOWN",
		1: "EVERYBODY",
		2: "NOBODY",
	}
	AccountRecord_PhoneNumberSharingMode_value = map[string]int32{
		"UNKNOWN":   0,
		"EVERYBODY": 1,
		"NOBODY":    2,
	}
)

func (x AccountRecord_PhoneNumberSharingMode) Enum() *AccountRecord_PhoneNumberSharingMode {
	p := new(AccountRecord_PhoneNumberSharingMode)
	*p = x
	return p
}

func (x AccountRecord_PhoneNumberSharingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountRecord_PhoneNumberSharingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_StorageService_proto_enumTypes[5].Descriptor()
}

func (AccountRecord_PhoneNumberSharingMode) Type() protoreflect.EnumType {
	return &file_StorageService_proto_enumTypes[5]
}

func (x AccountRecord_PhoneNumberSharingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountRecord_PhoneNumberSharingMode.Descriptor instead.
func (AccountRecord_PhoneNumberSharingMode) EnumDescriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{11, 0}
}

type AccountRecord_UsernameLink_Color int32

const (
	AccountRecord_UsernameLink_UNKNOWN AccountRecord_UsernameLink_Color = 0
	AccountRecord_UsernameLink_BLUE    AccountRecord_UsernameLink_Color = 1
	AccountRecord_UsernameLink_WHITE   AccountRecord_UsernameLink_Color = 2
	AccountRecord_UsernameLink_GREY    AccountRecord_UsernameLink_Color = 3
	AccountRecord_UsernameLink_OLIVE   AccountRecord_UsernameLink_Color = 4
	AccountRecord_UsernameLink_GREEN   AccountRecord_UsernameLink_Color = 5
	AccountRecord_UsernameLink_ORANGE  AccountRecord_UsernameLink_Color = 6
	AccountRecord_UsernameLink_PINK    AccountRecord_UsernameLink_Color = 7
	AccountRecord_UsernameLink_PURPLE  AccountRecord_UsernameLink_Color = 8
)

// Enum value maps for AccountRecord_UsernameLink_Color.
var (
	AccountRecord_UsernameLink_Color_name = map[int32]string{
		0: "UNKNOWN",
		1: "BLUE",
		2: "WHITE",
		3: "GREY",
		4: "OLIVE",
		5: "GREEN",
		6: "ORANGE",
		7: "PINK",
		8: "PURPLE",
	}
	AccountRecord_UsernameLink_Color_value = map[string]int32{
		"UNKNOWN": 0,
		"BLUE":    1,
		"WHITE":   2,
		"GREY":    3,
		"OLIVE":   4,
		"GREEN":   5,
		"ORANGE":  6,
		"PINK":    7,
		"PURPLE":  8,
	}
)

func (x AccountRecord_UsernameLink_Color) Enum() *AccountRecord_UsernameLink_Color {
	p := new(AccountRecord_UsernameLink_Color)
	*p = x
	return p
}

func (x AccountRecord_UsernameLink_Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountRecord_UsernameLink_Color) Descriptor() protoreflect.EnumDescriptor {
	return file_StorageService_proto_enumTypes[6].Descriptor()
}

func (AccountRecord_UsernameLink_Color) Type() protoreflect.EnumType {
	return &file_StorageService_proto_enumTypes[6]
}

func (x AccountRecord_UsernameLink_Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountRecord_UsernameLink_Color.Descriptor instead.
func (AccountRecord_UsernameLink_Color) EnumDescriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{11, 1, 0}
}

// Represents the default "All chats" folder record vs all other custom folders
type ChatFolderRecord_FolderType int32

const (
	ChatFolderRecord_UNKNOWN ChatFolderRecord_FolderType = 0
	ChatFolderRecord_ALL     ChatFolderRecord_FolderType = 1
	ChatFolderRecord_CUSTOM  ChatFolderRecord_FolderType = 2
)

// Enum value maps for ChatFolderRecord_FolderType.
var (
	ChatFolderRecord_FolderType_name = map[int32]string{
		0: "UNKNOWN",
		1: "ALL",
		2: "CUSTOM",
	}
	ChatFolderRecord_FolderType_value = map[string]int32{
		"UNKNOWN": 0,
		"ALL":     1,
		"CUSTOM":  2,
	}
)

func (x ChatFolderRecord_FolderType) Enum() *ChatFolderRecord_FolderType {
	p := new(ChatFolderRecord_FolderType)
	*p = x
	return p
}

func (x ChatFolderRecord_FolderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatFolderRecord_FolderType) Descriptor() protoreflect.EnumDescriptor {
	return file_StorageService_proto_enumTypes[7].Descriptor()
}

func (ChatFolderRecord_FolderType) Type() protoreflect.EnumType {
	return &file_StorageService_proto_enumTypes[7]
}

func (x ChatFolderRecord_FolderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatFolderRecord_FolderType.Descriptor instead.
func (ChatFolderRecord_FolderType) EnumDescriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{14, 0}
}

type StorageManifest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       uint64                 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageManifest) Reset() {
	*x = StorageManifest{}
	mi := &file_StorageService_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageManifest) ProtoMessage() {}

func (x *StorageManifest) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageManifest.ProtoReflect.Descriptor instead.
func (*StorageManifest) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{0}
}

func (x *StorageManifest) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *StorageManifest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type StorageItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageItem) Reset() {
	*x = StorageItem{}
	mi := &file_StorageService_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageItem) ProtoMessage() {}

func (x *StorageItem) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageItem.ProtoReflect.Descriptor instead.
func (*StorageItem) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{1}
}

func (x *StorageItem) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *StorageItem) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type StorageItems struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*StorageItem         `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageItems) Reset() {
	*x = StorageItems{}
	mi := &file_StorageService_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageItems) ProtoMessage() {}

func (x *StorageItems) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageItems.ProtoReflect.Descriptor instead.
func (*StorageItems) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{2}
}

func (x *StorageItems) GetItems() []*StorageItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ReadOperation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReadKey       [][]byte               `protobuf:"bytes,1,rep,name=readKey,proto3" json:"readKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadOperation) Reset() {
	*x = ReadOperation{}
	mi := &file_StorageService_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadOperation) ProtoMessage() {}

func (x *ReadOperation) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadOperation.ProtoReflect.Descriptor instead.
func (*ReadOperation) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{3}
}

func (x *ReadOperation) GetReadKey() [][]byte {
	if x != nil {
		return x.ReadKey
	}
	return nil
}

type WriteOperation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Manifest      *StorageManifest       `protobuf:"bytes,1,opt,name=manifest,proto3" json:"manifest,omitempty"`
	InsertItem    []*StorageItem         `protobuf:"bytes,2,rep,name=insertItem,proto3" json:"insertItem,omitempty"`
	DeleteKey     [][]byte               `protobuf:"bytes,3,rep,name=deleteKey,proto3" json:"deleteKey,omitempty"`
	ClearAll      bool                   `protobuf:"varint,4,opt,name=clearAll,proto3" json:"clearAll,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteOperation) Reset() {
	*x = WriteOperation{}
	mi := &file_StorageService_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteOperation) ProtoMessage() {}

func (x *WriteOperation) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteOperation.ProtoReflect.Descriptor instead.
func (*WriteOperation) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{4}
}

func (x *WriteOperation) GetManifest() *StorageManifest {
	if x != nil {
		return x.Manifest
	}
	return nil
}

func (x *WriteOperation) GetInsertItem() []*StorageItem {
	if x != nil {
		return x.InsertItem
	}
	return nil
}

func (x *WriteOperation) GetDeleteKey() [][]byte {
	if x != nil {
		return x.DeleteKey
	}
	return nil
}

func (x *WriteOperation) GetClearAll() bool {
	if x != nil {
		return x.ClearAll
	}
	return false
}

type ManifestRecord struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Version       uint64                       `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	SourceDevice  uint32                       `protobuf:"varint,3,opt,name=sourceDevice,proto3" json:"sourceDevice,omitempty"`
	Identifiers   []*ManifestRecord_Identifier `protobuf:"bytes,2,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
	RecordIkm     []byte                       `protobuf:"bytes,4,opt,name=recordIkm,proto3" json:"recordIkm,omitempty"` // Next ID: 5
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManifestRecord) Reset() {
	*x = ManifestRecord{}
	mi := &file_StorageService_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManifestRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManifestRecord) ProtoMessage() {}

func (x *ManifestRecord) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManifestRecord.ProtoReflect.Descriptor instead.
func (*ManifestRecord) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{5}
}

func (x *ManifestRecord) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ManifestRecord) GetSourceDevice() uint32 {
	if x != nil {
		return x.SourceDevice
	}
	return 0
}

func (x *ManifestRecord) GetIdentifiers() []*ManifestRecord_Identifier {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

func (x *ManifestRecord) GetRecordIkm() []byte {
	if x != nil {
		return x.RecordIkm
	}
	return nil
}

type StorageRecord struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Record:
	//
	//	*StorageRecord_Contact
	//	*StorageRecord_GroupV1
	//	*StorageRecord_GroupV2
	//	*StorageRecord_Account
	//	*StorageRecord_StoryDistributionList
	//	*StorageRecord_CallLink
	//	*StorageRecord_ChatFolder
	Record        isStorageRecord_Record `protobuf_oneof:"record"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageRecord) Reset() {
	*x = StorageRecord{}
	mi := &file_StorageService_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageRecord) ProtoMessage() {}

func (x *StorageRecord) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageRecord.ProtoReflect.Descriptor instead.
func (*StorageRecord) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{6}
}

func (x *StorageRecord) GetRecord() isStorageRecord_Record {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *StorageRecord) GetContact() *ContactRecord {
	if x != nil {
		if x, ok := x.Record.(*StorageRecord_Contact); ok {
			return x.Contact
		}
	}
	return nil
}

func (x *StorageRecord) GetGroupV1() *GroupV1Record {
	if x != nil {
		if x, ok := x.Record.(*StorageRecord_GroupV1); ok {
			return x.GroupV1
		}
	}
	return nil
}

func (x *StorageRecord) GetGroupV2() *GroupV2Record {
	if x != nil {
		if x, ok := x.Record.(*StorageRecord_GroupV2); ok {
			return x.GroupV2
		}
	}
	return nil
}

func (x *StorageRecord) GetAccount() *AccountRecord {
	if x != nil {
		if x, ok := x.Record.(*StorageRecord_Account); ok {
			return x.Account
		}
	}
	return nil
}

func (x *StorageRecord) GetStoryDistributionList() *StoryDistributionListRecord {
	if x != nil {
		if x, ok := x.Record.(*StorageRecord_StoryDistributionList); ok {
			return x.StoryDistributionList
		}
	}
	return nil
}

func (x *StorageRecord) GetCallLink() *CallLinkRecord {
	if x != nil {
		if x, ok := x.Record.(*StorageRecord_CallLink); ok {
			return x.CallLink
		}
	}
	return nil
}

func (x *StorageRecord) GetChatFolder() *ChatFolderRecord {
	if x != nil {
		if x, ok := x.Record.(*StorageRecord_ChatFolder); ok {
			return x.ChatFolder
		}
	}
	return nil
}

type isStorageRecord_Record interface {
	isStorageRecord_Record()
}

type StorageRecord_Contact struct {
	Contact *ContactRecord `protobuf:"bytes,1,opt,name=contact,proto3,oneof"`
}

type StorageRecord_GroupV1 struct {
	GroupV1 *GroupV1Record `protobuf:"bytes,2,opt,name=groupV1,proto3,oneof"`
}

type StorageRecord_GroupV2 struct {
	GroupV2 *GroupV2Record `protobuf:"bytes,3,opt,name=groupV2,proto3,oneof"`
}

type StorageRecord_Account struct {
	Account *AccountRecord `protobuf:"bytes,4,opt,name=account,proto3,oneof"`
}

type StorageRecord_StoryDistributionList struct {
	StoryDistributionList *StoryDistributionListRecord `protobuf:"bytes,5,opt,name=storyDistributionList,proto3,oneof"`
}

type StorageRecord_CallLink struct {
	CallLink *CallLinkRecord `protobuf:"bytes,7,opt,name=callLink,proto3,oneof"`
}

type StorageRecord_ChatFolder struct {
	ChatFolder *ChatFolderRecord `protobuf:"bytes,8,opt,name=chatFolder,proto3,oneof"`
}

func (*StorageRecord_Contact) isStorageRecord_Record() {}

func (*StorageRecord_GroupV1) isStorageRecord_Record() {}

func (*StorageRecord_GroupV2) isStorageRecord_Record() {}

func (*StorageRecord_Account) isStorageRecord_Record() {}

func (*StorageRecord_StoryDistributionList) isStorageRecord_Record() {}

func (*StorageRecord_CallLink) isStorageRecord_Record() {}

func (*StorageRecord_ChatFolder) isStorageRecord_Record() {}

type ContactRecord struct {
	state                   protoimpl.MessageState      `protogen:"open.v1"`
	Aci                     string                      `protobuf:"bytes,1,opt,name=aci,proto3" json:"aci,omitempty"`
	E164                    string                      `protobuf:"bytes,2,opt,name=e164,proto3" json:"e164,omitempty"`
	Pni                     string                      `protobuf:"bytes,15,opt,name=pni,proto3" json:"pni,omitempty"`
	ProfileKey              []byte                      `protobuf:"bytes,3,opt,name=profileKey,proto3" json:"profileKey,omitempty"`
	IdentityKey             []byte                      `protobuf:"bytes,4,opt,name=identityKey,proto3" json:"identityKey,omitempty"`
	IdentityState           ContactRecord_IdentityState `protobuf:"varint,5,opt,name=identityState,proto3,enum=signalservice.ContactRecord_IdentityState" json:"identityState,omitempty"`
	GivenName               string                      `protobuf:"bytes,6,opt,name=givenName,proto3" json:"givenName,omitempty"`
	FamilyName              string                      `protobuf:"bytes,7,opt,name=familyName,proto3" json:"familyName,omitempty"`
	Username                string                      `protobuf:"bytes,8,opt,name=username,proto3" json:"username,omitempty"`
	Blocked                 bool                        `protobuf:"varint,9,opt,name=blocked,proto3" json:"blocked,omitempty"`
	Whitelisted             bool                        `protobuf:"varint,10,opt,name=whitelisted,proto3" json:"whitelisted,omitempty"`
	Archived                bool                        `protobuf:"varint,11,opt,name=archived,proto3" json:"archived,omitempty"`
	MarkedUnread            bool                        `protobuf:"varint,12,opt,name=markedUnread,proto3" json:"markedUnread,omitempty"`
	MutedUntilTimestamp     uint64                      `protobuf:"varint,13,opt,name=mutedUntilTimestamp,proto3" json:"mutedUntilTimestamp,omitempty"`
	HideStory               bool                        `protobuf:"varint,14,opt,name=hideStory,proto3" json:"hideStory,omitempty"`
	UnregisteredAtTimestamp uint64                      `protobuf:"varint,16,opt,name=unregisteredAtTimestamp,proto3" json:"unregisteredAtTimestamp,omitempty"`
	SystemGivenName         string                      `protobuf:"bytes,17,opt,name=systemGivenName,proto3" json:"systemGivenName,omitempty"`
	SystemFamilyName        string                      `protobuf:"bytes,18,opt,name=systemFamilyName,proto3" json:"systemFamilyName,omitempty"`
	SystemNickname          string                      `protobuf:"bytes,19,opt,name=systemNickname,proto3" json:"systemNickname,omitempty"`
	Hidden                  bool                        `protobuf:"varint,20,opt,name=hidden,proto3" json:"hidden,omitempty"`
	PniSignatureVerified    bool                        `protobuf:"varint,21,opt,name=pniSignatureVerified,proto3" json:"pniSignatureVerified,omitempty"`
	Nickname                *ContactRecord_Name         `protobuf:"bytes,22,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Note                    string                      `protobuf:"bytes,23,opt,name=note,proto3" json:"note,omitempty"`
	AvatarColor             *AvatarColor                `protobuf:"varint,24,opt,name=avatarColor,proto3,enum=signalservice.AvatarColor,oneof" json:"avatarColor,omitempty"` // Next ID: 25
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ContactRecord) Reset() {
	*x = ContactRecord{}
	mi := &file_StorageService_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContactRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactRecord) ProtoMessage() {}

func (x *ContactRecord) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactRecord.ProtoReflect.Descriptor instead.
func (*ContactRecord) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{7}
}

func (x *ContactRecord) GetAci() string {
	if x != nil {
		return x.Aci
	}
	return ""
}

func (x *ContactRecord) GetE164() string {
	if x != nil {
		return x.E164
	}
	return ""
}

func (x *ContactRecord) GetPni() string {
	if x != nil {
		return x.Pni
	}
	return ""
}

func (x *ContactRecord) GetProfileKey() []byte {
	if x != nil {
		return x.ProfileKey
	}
	return nil
}

func (x *ContactRecord) GetIdentityKey() []byte {
	if x != nil {
		return x.IdentityKey
	}
	return nil
}

func (x *ContactRecord) GetIdentityState() ContactRecord_IdentityState {
	if x != nil {
		return x.IdentityState
	}
	return ContactRecord_DEFAULT
}

func (x *ContactRecord) GetGivenName() string {
	if x != nil {
		return x.GivenName
	}
	return ""
}

func (x *ContactRecord) GetFamilyName() string {
	if x != nil {
		return x.FamilyName
	}
	return ""
}

func (x *ContactRecord) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ContactRecord) GetBlocked() bool {
	if x != nil {
		return x.Blocked
	}
	return false
}

func (x *ContactRecord) GetWhitelisted() bool {
	if x != nil {
		return x.Whitelisted
	}
	return false
}

func (x *ContactRecord) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *ContactRecord) GetMarkedUnread() bool {
	if x != nil {
		return x.MarkedUnread
	}
	return false
}

func (x *ContactRecord) GetMutedUntilTimestamp() uint64 {
	if x != nil {
		return x.MutedUntilTimestamp
	}
	return 0
}

func (x *ContactRecord) GetHideStory() bool {
	if x != nil {
		return x.HideStory
	}
	return false
}

func (x *ContactRecord) GetUnregisteredAtTimestamp() uint64 {
	if x != nil {
		return x.UnregisteredAtTimestamp
	}
	return 0
}

func (x *ContactRecord) GetSystemGivenName() string {
	if x != nil {
		return x.SystemGivenName
	}
	return ""
}

func (x *ContactRecord) GetSystemFamilyName() string {
	if x != nil {
		return x.SystemFamilyName
	}
	return ""
}

func (x *ContactRecord) GetSystemNickname() string {
	if x != nil {
		return x.SystemNickname
	}
	return ""
}

func (x *ContactRecord) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *ContactRecord) GetPniSignatureVerified() bool {
	if x != nil {
		return x.PniSignatureVerified
	}
	return false
}

func (x *ContactRecord) GetNickname() *ContactRecord_Name {
	if x != nil {
		return x.Nickname
	}
	return nil
}

func (x *ContactRecord) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *ContactRecord) GetAvatarColor() AvatarColor {
	if x != nil && x.AvatarColor != nil {
		return *x.AvatarColor
	}
	return AvatarColor_A100
}

type GroupV1Record struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Blocked             bool                   `protobuf:"varint,2,opt,name=blocked,proto3" json:"blocked,omitempty"`
	Whitelisted         bool                   `protobuf:"varint,3,opt,name=whitelisted,proto3" json:"whitelisted,omitempty"`
	Archived            bool                   `protobuf:"varint,4,opt,name=archived,proto3" json:"archived,omitempty"`
	MarkedUnread        bool                   `protobuf:"varint,5,opt,name=markedUnread,proto3" json:"markedUnread,omitempty"`
	MutedUntilTimestamp uint64                 `protobuf:"varint,6,opt,name=mutedUntilTimestamp,proto3" json:"mutedUntilTimestamp,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GroupV1Record) Reset() {
	*x = GroupV1Record{}
	mi := &file_StorageService_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupV1Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupV1Record) ProtoMessage() {}

func (x *GroupV1Record) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupV1Record.ProtoReflect.Descriptor instead.
func (*GroupV1Record) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{8}
}

func (x *GroupV1Record) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GroupV1Record) GetBlocked() bool {
	if x != nil {
		return x.Blocked
	}
	return false
}

func (x *GroupV1Record) GetWhitelisted() bool {
	if x != nil {
		return x.Whitelisted
	}
	return false
}

func (x *GroupV1Record) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *GroupV1Record) GetMarkedUnread() bool {
	if x != nil {
		return x.MarkedUnread
	}
	return false
}

func (x *GroupV1Record) GetMutedUntilTimestamp() uint64 {
	if x != nil {
		return x.MutedUntilTimestamp
	}
	return 0
}

type GroupV2Record struct {
	state                        protoimpl.MessageState      `protogen:"open.v1"`
	MasterKey                    []byte                      `protobuf:"bytes,1,opt,name=masterKey,proto3" json:"masterKey,omitempty"`
	Blocked                      bool                        `protobuf:"varint,2,opt,name=blocked,proto3" json:"blocked,omitempty"`
	Whitelisted                  bool                        `protobuf:"varint,3,opt,name=whitelisted,proto3" json:"whitelisted,omitempty"`
	Archived                     bool                        `protobuf:"varint,4,opt,name=archived,proto3" json:"archived,omitempty"`
	MarkedUnread                 bool                        `protobuf:"varint,5,opt,name=markedUnread,proto3" json:"markedUnread,omitempty"`
	MutedUntilTimestamp          uint64                      `protobuf:"varint,6,opt,name=mutedUntilTimestamp,proto3" json:"mutedUntilTimestamp,omitempty"`
	DontNotifyForMentionsIfMuted bool                        `protobuf:"varint,7,opt,name=dontNotifyForMentionsIfMuted,proto3" json:"dontNotifyForMentionsIfMuted,omitempty"`
	HideStory                    bool                        `protobuf:"varint,8,opt,name=hideStory,proto3" json:"hideStory,omitempty"`
	StorySendMode                GroupV2Record_StorySendMode `protobuf:"varint,10,opt,name=storySendMode,proto3,enum=signalservice.GroupV2Record_StorySendMode" json:"storySendMode,omitempty"`
	AvatarColor                  *AvatarColor                `protobuf:"varint,11,opt,name=avatarColor,proto3,enum=signalservice.AvatarColor,oneof" json:"avatarColor,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *GroupV2Record) Reset() {
	*x = GroupV2Record{}
	mi := &file_StorageService_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupV2Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupV2Record) ProtoMessage() {}

func (x *GroupV2Record) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupV2Record.ProtoReflect.Descriptor instead.
func (*GroupV2Record) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{9}
}

func (x *GroupV2Record) GetMasterKey() []byte {
	if x != nil {
		return x.MasterKey
	}
	return nil
}

func (x *GroupV2Record) GetBlocked() bool {
	if x != nil {
		return x.Blocked
	}
	return false
}

func (x *GroupV2Record) GetWhitelisted() bool {
	if x != nil {
		return x.Whitelisted
	}
	return false
}

func (x *GroupV2Record) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *GroupV2Record) GetMarkedUnread() bool {
	if x != nil {
		return x.MarkedUnread
	}
	return false
}

func (x *GroupV2Record) GetMutedUntilTimestamp() uint64 {
	if x != nil {
		return x.MutedUntilTimestamp
	}
	return 0
}

func (x *GroupV2Record) GetDontNotifyForMentionsIfMuted() bool {
	if x != nil {
		return x.DontNotifyForMentionsIfMuted
	}
	return false
}

func (x *GroupV2Record) GetHideStory() bool {
	if x != nil {
		return x.HideStory
	}
	return false
}

func (x *GroupV2Record) GetStorySendMode() GroupV2Record_StorySendMode {
	if x != nil {
		return x.StorySendMode
	}
	return GroupV2Record_DEFAULT
}

func (x *GroupV2Record) GetAvatarColor() AvatarColor {
	if x != nil && x.AvatarColor != nil {
		return *x.AvatarColor
	}
	return AvatarColor_A100
}

type Payments struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Entropy       []byte                 `protobuf:"bytes,2,opt,name=entropy,proto3" json:"entropy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Payments) Reset() {
	*x = Payments{}
	mi := &file_StorageService_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payments) ProtoMessage() {}

func (x *Payments) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payments.ProtoReflect.Descriptor instead.
func (*Payments) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{10}
}

func (x *Payments) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Payments) GetEntropy() []byte {
	if x != nil {
		return x.Entropy
	}
	return nil
}

type AccountRecord struct {
	state                           protoimpl.MessageState               `protogen:"open.v1"`
	ProfileKey                      []byte                               `protobuf:"bytes,1,opt,name=profileKey,proto3" json:"profileKey,omitempty"`
	GivenName                       string                               `protobuf:"bytes,2,opt,name=givenName,proto3" json:"givenName,omitempty"`
	FamilyName                      string                               `protobuf:"bytes,3,opt,name=familyName,proto3" json:"familyName,omitempty"`
	AvatarUrlPath                   string                               `protobuf:"bytes,4,opt,name=avatarUrlPath,proto3" json:"avatarUrlPath,omitempty"`
	NoteToSelfArchived              bool                                 `protobuf:"varint,5,opt,name=noteToSelfArchived,proto3" json:"noteToSelfArchived,omitempty"`
	ReadReceipts                    bool                                 `protobuf:"varint,6,opt,name=readReceipts,proto3" json:"readReceipts,omitempty"`
	SealedSenderIndicators          bool                                 `protobuf:"varint,7,opt,name=sealedSenderIndicators,proto3" json:"sealedSenderIndicators,omitempty"`
	TypingIndicators                bool                                 `protobuf:"varint,8,opt,name=typingIndicators,proto3" json:"typingIndicators,omitempty"`
	NoteToSelfMarkedUnread          bool                                 `protobuf:"varint,10,opt,name=noteToSelfMarkedUnread,proto3" json:"noteToSelfMarkedUnread,omitempty"`
	LinkPreviews                    bool                                 `protobuf:"varint,11,opt,name=linkPreviews,proto3" json:"linkPreviews,omitempty"`
	PhoneNumberSharingMode          AccountRecord_PhoneNumberSharingMode `protobuf:"varint,12,opt,name=phoneNumberSharingMode,proto3,enum=signalservice.AccountRecord_PhoneNumberSharingMode" json:"phoneNumberSharingMode,omitempty"`
	UnlistedPhoneNumber             bool                                 `protobuf:"varint,13,opt,name=unlistedPhoneNumber,proto3" json:"unlistedPhoneNumber,omitempty"`
	PinnedConversations             []*AccountRecord_PinnedConversation  `protobuf:"bytes,14,rep,name=pinnedConversations,proto3" json:"pinnedConversations,omitempty"`
	PreferContactAvatars            bool                                 `protobuf:"varint,15,opt,name=preferContactAvatars,proto3" json:"preferContactAvatars,omitempty"`
	Payments                        *Payments                            `protobuf:"bytes,16,opt,name=payments,proto3" json:"payments,omitempty"`
	UniversalExpireTimer            uint32                               `protobuf:"varint,17,opt,name=universalExpireTimer,proto3" json:"universalExpireTimer,omitempty"`
	PrimarySendsSms                 bool                                 `protobuf:"varint,18,opt,name=primarySendsSms,proto3" json:"primarySendsSms,omitempty"`
	E164                            string                               `protobuf:"bytes,19,opt,name=e164,proto3" json:"e164,omitempty"`
	PreferredReactionEmoji          []string                             `protobuf:"bytes,20,rep,name=preferredReactionEmoji,proto3" json:"preferredReactionEmoji,omitempty"`
	SubscriberId                    []byte                               `protobuf:"bytes,21,opt,name=subscriberId,proto3" json:"subscriberId,omitempty"`
	SubscriberCurrencyCode          string                               `protobuf:"bytes,22,opt,name=subscriberCurrencyCode,proto3" json:"subscriberCurrencyCode,omitempty"`
	DisplayBadgesOnProfile          bool                                 `protobuf:"varint,23,opt,name=displayBadgesOnProfile,proto3" json:"displayBadgesOnProfile,omitempty"`
	SubscriptionManuallyCancelled   bool                                 `protobuf:"varint,24,opt,name=subscriptionManuallyCancelled,proto3" json:"subscriptionManuallyCancelled,omitempty"`
	KeepMutedChatsArchived          bool                                 `protobuf:"varint,25,opt,name=keepMutedChatsArchived,proto3" json:"keepMutedChatsArchived,omitempty"`
	HasSetMyStoriesPrivacy          bool                                 `protobuf:"varint,26,opt,name=hasSetMyStoriesPrivacy,proto3" json:"hasSetMyStoriesPrivacy,omitempty"`
	HasViewedOnboardingStory        bool                                 `protobuf:"varint,27,opt,name=hasViewedOnboardingStory,proto3" json:"hasViewedOnboardingStory,omitempty"`
	StoriesDisabled                 bool                                 `protobuf:"varint,29,opt,name=storiesDisabled,proto3" json:"storiesDisabled,omitempty"`
	StoryViewReceiptsEnabled        OptionalBool                         `protobuf:"varint,30,opt,name=storyViewReceiptsEnabled,proto3,enum=signalservice.OptionalBool" json:"storyViewReceiptsEnabled,omitempty"`
	HasSeenGroupStoryEducationSheet bool                                 `protobuf:"varint,32,opt,name=hasSeenGroupStoryEducationSheet,proto3" json:"hasSeenGroupStoryEducationSheet,omitempty"`
	Username                        string                               `protobuf:"bytes,33,opt,name=username,proto3" json:"username,omitempty"`
	HasCompletedUsernameOnboarding  bool                                 `protobuf:"varint,34,opt,name=hasCompletedUsernameOnboarding,proto3" json:"hasCompletedUsernameOnboarding,omitempty"`
	UsernameLink                    *AccountRecord_UsernameLink          `protobuf:"bytes,35,opt,name=usernameLink,proto3" json:"usernameLink,omitempty"`
	HasBackup                       *bool                                `protobuf:"varint,39,opt,name=hasBackup,proto3,oneof" json:"hasBackup,omitempty"`   // Set to true after backups are enabled and one is uploaded.
	BackupTier                      *uint64                              `protobuf:"varint,40,opt,name=backupTier,proto3,oneof" json:"backupTier,omitempty"` // See zkgroup for integer particular values
	BackupSubscriberData            *AccountRecord_IAPSubscriberData     `protobuf:"bytes,41,opt,name=backupSubscriberData,proto3" json:"backupSubscriberData,omitempty"`
	AvatarColor                     *AvatarColor                         `protobuf:"varint,42,opt,name=avatarColor,proto3,enum=signalservice.AvatarColor,oneof" json:"avatarColor,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *AccountRecord) Reset() {
	*x = AccountRecord{}
	mi := &file_StorageService_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRecord) ProtoMessage() {}

func (x *AccountRecord) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRecord.ProtoReflect.Descriptor instead.
func (*AccountRecord) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{11}
}

func (x *AccountRecord) GetProfileKey() []byte {
	if x != nil {
		return x.ProfileKey
	}
	return nil
}

func (x *AccountRecord) GetGivenName() string {
	if x != nil {
		return x.GivenName
	}
	return ""
}

func (x *AccountRecord) GetFamilyName() string {
	if x != nil {
		return x.FamilyName
	}
	return ""
}

func (x *AccountRecord) GetAvatarUrlPath() string {
	if x != nil {
		return x.AvatarUrlPath
	}
	return ""
}

func (x *AccountRecord) GetNoteToSelfArchived() bool {
	if x != nil {
		return x.NoteToSelfArchived
	}
	return false
}

func (x *AccountRecord) GetReadReceipts() bool {
	if x != nil {
		return x.ReadReceipts
	}
	return false
}

func (x *AccountRecord) GetSealedSenderIndicators() bool {
	if x != nil {
		return x.SealedSenderIndicators
	}
	return false
}

func (x *AccountRecord) GetTypingIndicators() bool {
	if x != nil {
		return x.TypingIndicators
	}
	return false
}

func (x *AccountRecord) GetNoteToSelfMarkedUnread() bool {
	if x != nil {
		return x.NoteToSelfMarkedUnread
	}
	return false
}

func (x *AccountRecord) GetLinkPreviews() bool {
	if x != nil {
		return x.LinkPreviews
	}
	return false
}

func (x *AccountRecord) GetPhoneNumberSharingMode() AccountRecord_PhoneNumberSharingMode {
	if x != nil {
		return x.PhoneNumberSharingMode
	}
	return AccountRecord_UNKNOWN
}

func (x *AccountRecord) GetUnlistedPhoneNumber() bool {
	if x != nil {
		return x.UnlistedPhoneNumber
	}
	return false
}

func (x *AccountRecord) GetPinnedConversations() []*AccountRecord_PinnedConversation {
	if x != nil {
		return x.PinnedConversations
	}
	return nil
}

func (x *AccountRecord) GetPreferContactAvatars() bool {
	if x != nil {
		return x.PreferContactAvatars
	}
	return false
}

func (x *AccountRecord) GetPayments() *Payments {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *AccountRecord) GetUniversalExpireTimer() uint32 {
	if x != nil {
		return x.UniversalExpireTimer
	}
	return 0
}

func (x *AccountRecord) GetPrimarySendsSms() bool {
	if x != nil {
		return x.PrimarySendsSms
	}
	return false
}

func (x *AccountRecord) GetE164() string {
	if x != nil {
		return x.E164
	}
	return ""
}

func (x *AccountRecord) GetPreferredReactionEmoji() []string {
	if x != nil {
		return x.PreferredReactionEmoji
	}
	return nil
}

func (x *AccountRecord) GetSubscriberId() []byte {
	if x != nil {
		return x.SubscriberId
	}
	return nil
}

func (x *AccountRecord) GetSubscriberCurrencyCode() string {
	if x != nil {
		return x.SubscriberCurrencyCode
	}
	return ""
}

func (x *AccountRecord) GetDisplayBadgesOnProfile() bool {
	if x != nil {
		return x.DisplayBadgesOnProfile
	}
	return false
}

func (x *AccountRecord) GetSubscriptionManuallyCancelled() bool {
	if x != nil {
		return x.SubscriptionManuallyCancelled
	}
	return false
}

func (x *AccountRecord) GetKeepMutedChatsArchived() bool {
	if x != nil {
		return x.KeepMutedChatsArchived
	}
	return false
}

func (x *AccountRecord) GetHasSetMyStoriesPrivacy() bool {
	if x != nil {
		return x.HasSetMyStoriesPrivacy
	}
	return false
}

func (x *AccountRecord) GetHasViewedOnboardingStory() bool {
	if x != nil {
		return x.HasViewedOnboardingStory
	}
	return false
}

func (x *AccountRecord) GetStoriesDisabled() bool {
	if x != nil {
		return x.StoriesDisabled
	}
	return false
}

func (x *AccountRecord) GetStoryViewReceiptsEnabled() OptionalBool {
	if x != nil {
		return x.StoryViewReceiptsEnabled
	}
	return OptionalBool_UNSET
}

func (x *AccountRecord) GetHasSeenGroupStoryEducationSheet() bool {
	if x != nil {
		return x.HasSeenGroupStoryEducationSheet
	}
	return false
}

func (x *AccountRecord) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AccountRecord) GetHasCompletedUsernameOnboarding() bool {
	if x != nil {
		return x.HasCompletedUsernameOnboarding
	}
	return false
}

func (x *AccountRecord) GetUsernameLink() *AccountRecord_UsernameLink {
	if x != nil {
		return x.UsernameLink
	}
	return nil
}

func (x *AccountRecord) GetHasBackup() bool {
	if x != nil && x.HasBackup != nil {
		return *x.HasBackup
	}
	return false
}

func (x *AccountRecord) GetBackupTier() uint64 {
	if x != nil && x.BackupTier != nil {
		return *x.BackupTier
	}
	return 0
}

func (x *AccountRecord) GetBackupSubscriberData() *AccountRecord_IAPSubscriberData {
	if x != nil {
		return x.BackupSubscriberData
	}
	return nil
}

func (x *AccountRecord) GetAvatarColor() AvatarColor {
	if x != nil && x.AvatarColor != nil {
		return *x.AvatarColor
	}
	return AvatarColor_A100
}

type StoryDistributionListRecord struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Identifier          []byte                 `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Name                string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RecipientServiceIds []string               `protobuf:"bytes,3,rep,name=recipientServiceIds,proto3" json:"recipientServiceIds,omitempty"`
	DeletedAtTimestamp  uint64                 `protobuf:"varint,4,opt,name=deletedAtTimestamp,proto3" json:"deletedAtTimestamp,omitempty"`
	AllowsReplies       bool                   `protobuf:"varint,5,opt,name=allowsReplies,proto3" json:"allowsReplies,omitempty"`
	IsBlockList         bool                   `protobuf:"varint,6,opt,name=isBlockList,proto3" json:"isBlockList,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *StoryDistributionListRecord) Reset() {
	*x = StoryDistributionListRecord{}
	mi := &file_StorageService_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoryDistributionListRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryDistributionListRecord) ProtoMessage() {}

func (x *StoryDistributionListRecord) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryDistributionListRecord.ProtoReflect.Descriptor instead.
func (*StoryDistributionListRecord) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{12}
}

func (x *StoryDistributionListRecord) GetIdentifier() []byte {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *StoryDistributionListRecord) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoryDistributionListRecord) GetRecipientServiceIds() []string {
	if x != nil {
		return x.RecipientServiceIds
	}
	return nil
}

func (x *StoryDistributionListRecord) GetDeletedAtTimestamp() uint64 {
	if x != nil {
		return x.DeletedAtTimestamp
	}
	return 0
}

func (x *StoryDistributionListRecord) GetAllowsReplies() bool {
	if x != nil {
		return x.AllowsReplies
	}
	return false
}

func (x *StoryDistributionListRecord) GetIsBlockList() bool {
	if x != nil {
		return x.IsBlockList
	}
	return false
}

type CallLinkRecord struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	RootKey              []byte                 `protobuf:"bytes,1,opt,name=rootKey,proto3" json:"rootKey,omitempty"`
	AdminPasskey         []byte                 `protobuf:"bytes,2,opt,name=adminPasskey,proto3" json:"adminPasskey,omitempty"`
	DeletedAtTimestampMs uint64                 `protobuf:"varint,3,opt,name=deletedAtTimestampMs,proto3" json:"deletedAtTimestampMs,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CallLinkRecord) Reset() {
	*x = CallLinkRecord{}
	mi := &file_StorageService_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallLinkRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallLinkRecord) ProtoMessage() {}

func (x *CallLinkRecord) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallLinkRecord.ProtoReflect.Descriptor instead.
func (*CallLinkRecord) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{13}
}

func (x *CallLinkRecord) GetRootKey() []byte {
	if x != nil {
		return x.RootKey
	}
	return nil
}

func (x *CallLinkRecord) GetAdminPasskey() []byte {
	if x != nil {
		return x.AdminPasskey
	}
	return nil
}

func (x *CallLinkRecord) GetDeletedAtTimestampMs() uint64 {
	if x != nil {
		return x.DeletedAtTimestampMs
	}
	return 0
}

type ChatFolderRecord struct {
	state                     protoimpl.MessageState        `protogen:"open.v1"`
	Identifier                []byte                        `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Name                      string                        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Position                  uint32                        `protobuf:"varint,3,opt,name=position,proto3" json:"position,omitempty"`
	ShowOnlyUnread            bool                          `protobuf:"varint,4,opt,name=showOnlyUnread,proto3" json:"showOnlyUnread,omitempty"`
	ShowMutedChats            bool                          `protobuf:"varint,5,opt,name=showMutedChats,proto3" json:"showMutedChats,omitempty"`
	IncludeAllIndividualChats bool                          `protobuf:"varint,6,opt,name=includeAllIndividualChats,proto3" json:"includeAllIndividualChats,omitempty"` // Folder includes all 1:1 chats, unless excluded
	IncludeAllGroupChats      bool                          `protobuf:"varint,7,opt,name=includeAllGroupChats,proto3" json:"includeAllGroupChats,omitempty"`           // Folder includes all group chats, unless excluded
	FolderType                ChatFolderRecord_FolderType   `protobuf:"varint,8,opt,name=folderType,proto3,enum=signalservice.ChatFolderRecord_FolderType" json:"folderType,omitempty"`
	IncludedRecipients        []*ChatFolderRecord_Recipient `protobuf:"bytes,9,rep,name=includedRecipients,proto3" json:"includedRecipients,omitempty"`
	ExcludedRecipients        []*ChatFolderRecord_Recipient `protobuf:"bytes,10,rep,name=excludedRecipients,proto3" json:"excludedRecipients,omitempty"`
	DeletedAtTimestampMs      uint64                        `protobuf:"varint,11,opt,name=deletedAtTimestampMs,proto3" json:"deletedAtTimestampMs,omitempty"` // When non-zero, `position` should be set to -1 and includedRecipients should be empty
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ChatFolderRecord) Reset() {
	*x = ChatFolderRecord{}
	mi := &file_StorageService_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatFolderRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatFolderRecord) ProtoMessage() {}

func (x *ChatFolderRecord) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatFolderRecord.ProtoReflect.Descriptor instead.
func (*ChatFolderRecord) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{14}
}

func (x *ChatFolderRecord) GetIdentifier() []byte {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *ChatFolderRecord) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChatFolderRecord) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *ChatFolderRecord) GetShowOnlyUnread() bool {
	if x != nil {
		return x.ShowOnlyUnread
	}
	return false
}

func (x *ChatFolderRecord) GetShowMutedChats() bool {
	if x != nil {
		return x.ShowMutedChats
	}
	return false
}

func (x *ChatFolderRecord) GetIncludeAllIndividualChats() bool {
	if x != nil {
		return x.IncludeAllIndividualChats
	}
	return false
}

func (x *ChatFolderRecord) GetIncludeAllGroupChats() bool {
	if x != nil {
		return x.IncludeAllGroupChats
	}
	return false
}

func (x *ChatFolderRecord) GetFolderType() ChatFolderRecord_FolderType {
	if x != nil {
		return x.FolderType
	}
	return ChatFolderRecord_UNKNOWN
}

func (x *ChatFolderRecord) GetIncludedRecipients() []*ChatFolderRecord_Recipient {
	if x != nil {
		return x.IncludedRecipients
	}
	return nil
}

func (x *ChatFolderRecord) GetExcludedRecipients() []*ChatFolderRecord_Recipient {
	if x != nil {
		return x.ExcludedRecipients
	}
	return nil
}

func (x *ChatFolderRecord) GetDeletedAtTimestampMs() uint64 {
	if x != nil {
		return x.DeletedAtTimestampMs
	}
	return 0
}

type ManifestRecord_Identifier struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Raw           []byte                         `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
	Type          ManifestRecord_Identifier_Type `protobuf:"varint,2,opt,name=type,proto3,enum=signalservice.ManifestRecord_Identifier_Type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManifestRecord_Identifier) Reset() {
	*x = ManifestRecord_Identifier{}
	mi := &file_StorageService_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManifestRecord_Identifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManifestRecord_Identifier) ProtoMessage() {}

func (x *ManifestRecord_Identifier) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManifestRecord_Identifier.ProtoReflect.Descriptor instead.
func (*ManifestRecord_Identifier) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ManifestRecord_Identifier) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

func (x *ManifestRecord_Identifier) GetType() ManifestRecord_Identifier_Type {
	if x != nil {
		return x.Type
	}
	return ManifestRecord_Identifier_UNKNOWN
}

type ContactRecord_Name struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Given         string                 `protobuf:"bytes,1,opt,name=given,proto3" json:"given,omitempty"`
	Family        string                 `protobuf:"bytes,2,opt,name=family,proto3" json:"family,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContactRecord_Name) Reset() {
	*x = ContactRecord_Name{}
	mi := &file_StorageService_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContactRecord_Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactRecord_Name) ProtoMessage() {}

func (x *ContactRecord_Name) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactRecord_Name.ProtoReflect.Descriptor instead.
func (*ContactRecord_Name) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ContactRecord_Name) GetGiven() string {
	if x != nil {
		return x.Given
	}
	return ""
}

func (x *ContactRecord_Name) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

type AccountRecord_PinnedConversation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Identifier:
	//
	//	*AccountRecord_PinnedConversation_Contact_
	//	*AccountRecord_PinnedConversation_LegacyGroupId
	//	*AccountRecord_PinnedConversation_GroupMasterKey
	Identifier    isAccountRecord_PinnedConversation_Identifier `protobuf_oneof:"identifier"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountRecord_PinnedConversation) Reset() {
	*x = AccountRecord_PinnedConversation{}
	mi := &file_StorageService_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountRecord_PinnedConversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRecord_PinnedConversation) ProtoMessage() {}

func (x *AccountRecord_PinnedConversation) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRecord_PinnedConversation.ProtoReflect.Descriptor instead.
func (*AccountRecord_PinnedConversation) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{11, 0}
}

func (x *AccountRecord_PinnedConversation) GetIdentifier() isAccountRecord_PinnedConversation_Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *AccountRecord_PinnedConversation) GetContact() *AccountRecord_PinnedConversation_Contact {
	if x != nil {
		if x, ok := x.Identifier.(*AccountRecord_PinnedConversation_Contact_); ok {
			return x.Contact
		}
	}
	return nil
}

func (x *AccountRecord_PinnedConversation) GetLegacyGroupId() []byte {
	if x != nil {
		if x, ok := x.Identifier.(*AccountRecord_PinnedConversation_LegacyGroupId); ok {
			return x.LegacyGroupId
		}
	}
	return nil
}

func (x *AccountRecord_PinnedConversation) GetGroupMasterKey() []byte {
	if x != nil {
		if x, ok := x.Identifier.(*AccountRecord_PinnedConversation_GroupMasterKey); ok {
			return x.GroupMasterKey
		}
	}
	return nil
}

type isAccountRecord_PinnedConversation_Identifier interface {
	isAccountRecord_PinnedConversation_Identifier()
}

type AccountRecord_PinnedConversation_Contact_ struct {
	Contact *AccountRecord_PinnedConversation_Contact `protobuf:"bytes,1,opt,name=contact,proto3,oneof"`
}

type AccountRecord_PinnedConversation_LegacyGroupId struct {
	LegacyGroupId []byte `protobuf:"bytes,3,opt,name=legacyGroupId,proto3,oneof"`
}

type AccountRecord_PinnedConversation_GroupMasterKey struct {
	GroupMasterKey []byte `protobuf:"bytes,4,opt,name=groupMasterKey,proto3,oneof"`
}

func (*AccountRecord_PinnedConversation_Contact_) isAccountRecord_PinnedConversation_Identifier() {}

func (*AccountRecord_PinnedConversation_LegacyGroupId) isAccountRecord_PinnedConversation_Identifier() {
}

func (*AccountRecord_PinnedConversation_GroupMasterKey) isAccountRecord_PinnedConversation_Identifier() {
}

type AccountRecord_UsernameLink struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Entropy       []byte                           `protobuf:"bytes,1,opt,name=entropy,proto3" json:"entropy,omitempty"`   // 32 bytes of entropy used for encryption
	ServerId      []byte                           `protobuf:"bytes,2,opt,name=serverId,proto3" json:"serverId,omitempty"` // 16 bytes of encoded UUID provided by the server
	Color         AccountRecord_UsernameLink_Color `protobuf:"varint,3,opt,name=color,proto3,enum=signalservice.AccountRecord_UsernameLink_Color" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountRecord_UsernameLink) Reset() {
	*x = AccountRecord_UsernameLink{}
	mi := &file_StorageService_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountRecord_UsernameLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRecord_UsernameLink) ProtoMessage() {}

func (x *AccountRecord_UsernameLink) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRecord_UsernameLink.ProtoReflect.Descriptor instead.
func (*AccountRecord_UsernameLink) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{11, 1}
}

func (x *AccountRecord_UsernameLink) GetEntropy() []byte {
	if x != nil {
		return x.Entropy
	}
	return nil
}

func (x *AccountRecord_UsernameLink) GetServerId() []byte {
	if x != nil {
		return x.ServerId
	}
	return nil
}

func (x *AccountRecord_UsernameLink) GetColor() AccountRecord_UsernameLink_Color {
	if x != nil {
		return x.Color
	}
	return AccountRecord_UsernameLink_UNKNOWN
}

type AccountRecord_IAPSubscriberData struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	SubscriberId []byte                 `protobuf:"bytes,1,opt,name=subscriberId,proto3" json:"subscriberId,omitempty"`
	// Types that are valid to be assigned to IapSubscriptionId:
	//
	//	*AccountRecord_IAPSubscriberData_PurchaseToken
	//	*AccountRecord_IAPSubscriberData_OriginalTransactionId
	IapSubscriptionId isAccountRecord_IAPSubscriberData_IapSubscriptionId `protobuf_oneof:"iapSubscriptionId"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AccountRecord_IAPSubscriberData) Reset() {
	*x = AccountRecord_IAPSubscriberData{}
	mi := &file_StorageService_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountRecord_IAPSubscriberData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRecord_IAPSubscriberData) ProtoMessage() {}

func (x *AccountRecord_IAPSubscriberData) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRecord_IAPSubscriberData.ProtoReflect.Descriptor instead.
func (*AccountRecord_IAPSubscriberData) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{11, 2}
}

func (x *AccountRecord_IAPSubscriberData) GetSubscriberId() []byte {
	if x != nil {
		return x.SubscriberId
	}
	return nil
}

func (x *AccountRecord_IAPSubscriberData) GetIapSubscriptionId() isAccountRecord_IAPSubscriberData_IapSubscriptionId {
	if x != nil {
		return x.IapSubscriptionId
	}
	return nil
}

func (x *AccountRecord_IAPSubscriberData) GetPurchaseToken() string {
	if x != nil {
		if x, ok := x.IapSubscriptionId.(*AccountRecord_IAPSubscriberData_PurchaseToken); ok {
			return x.PurchaseToken
		}
	}
	return ""
}

func (x *AccountRecord_IAPSubscriberData) GetOriginalTransactionId() uint64 {
	if x != nil {
		if x, ok := x.IapSubscriptionId.(*AccountRecord_IAPSubscriberData_OriginalTransactionId); ok {
			return x.OriginalTransactionId
		}
	}
	return 0
}

type isAccountRecord_IAPSubscriberData_IapSubscriptionId interface {
	isAccountRecord_IAPSubscriberData_IapSubscriptionId()
}

type AccountRecord_IAPSubscriberData_PurchaseToken struct {
	// Identifies an Android Play Store IAP subscription.
	PurchaseToken string `protobuf:"bytes,2,opt,name=purchaseToken,proto3,oneof"`
}

type AccountRecord_IAPSubscriberData_OriginalTransactionId struct {
	// Identifies an iOS App Store IAP subscription.
	OriginalTransactionId uint64 `protobuf:"varint,3,opt,name=originalTransactionId,proto3,oneof"`
}

func (*AccountRecord_IAPSubscriberData_PurchaseToken) isAccountRecord_IAPSubscriberData_IapSubscriptionId() {
}

func (*AccountRecord_IAPSubscriberData_OriginalTransactionId) isAccountRecord_IAPSubscriberData_IapSubscriptionId() {
}

type AccountRecord_PinnedConversation_Contact struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceId     string                 `protobuf:"bytes,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	E164          string                 `protobuf:"bytes,2,opt,name=e164,proto3" json:"e164,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountRecord_PinnedConversation_Contact) Reset() {
	*x = AccountRecord_PinnedConversation_Contact{}
	mi := &file_StorageService_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountRecord_PinnedConversation_Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRecord_PinnedConversation_Contact) ProtoMessage() {}

func (x *AccountRecord_PinnedConversation_Contact) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRecord_PinnedConversation_Contact.ProtoReflect.Descriptor instead.
func (*AccountRecord_PinnedConversation_Contact) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{11, 0, 0}
}

func (x *AccountRecord_PinnedConversation_Contact) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *AccountRecord_PinnedConversation_Contact) GetE164() string {
	if x != nil {
		return x.E164
	}
	return ""
}

type ChatFolderRecord_Recipient struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Identifier:
	//
	//	*ChatFolderRecord_Recipient_Contact_
	//	*ChatFolderRecord_Recipient_LegacyGroupId
	//	*ChatFolderRecord_Recipient_GroupMasterKey
	Identifier    isChatFolderRecord_Recipient_Identifier `protobuf_oneof:"identifier"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatFolderRecord_Recipient) Reset() {
	*x = ChatFolderRecord_Recipient{}
	mi := &file_StorageService_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatFolderRecord_Recipient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatFolderRecord_Recipient) ProtoMessage() {}

func (x *ChatFolderRecord_Recipient) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatFolderRecord_Recipient.ProtoReflect.Descriptor instead.
func (*ChatFolderRecord_Recipient) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{14, 0}
}

func (x *ChatFolderRecord_Recipient) GetIdentifier() isChatFolderRecord_Recipient_Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *ChatFolderRecord_Recipient) GetContact() *ChatFolderRecord_Recipient_Contact {
	if x != nil {
		if x, ok := x.Identifier.(*ChatFolderRecord_Recipient_Contact_); ok {
			return x.Contact
		}
	}
	return nil
}

func (x *ChatFolderRecord_Recipient) GetLegacyGroupId() []byte {
	if x != nil {
		if x, ok := x.Identifier.(*ChatFolderRecord_Recipient_LegacyGroupId); ok {
			return x.LegacyGroupId
		}
	}
	return nil
}

func (x *ChatFolderRecord_Recipient) GetGroupMasterKey() []byte {
	if x != nil {
		if x, ok := x.Identifier.(*ChatFolderRecord_Recipient_GroupMasterKey); ok {
			return x.GroupMasterKey
		}
	}
	return nil
}

type isChatFolderRecord_Recipient_Identifier interface {
	isChatFolderRecord_Recipient_Identifier()
}

type ChatFolderRecord_Recipient_Contact_ struct {
	Contact *ChatFolderRecord_Recipient_Contact `protobuf:"bytes,1,opt,name=contact,proto3,oneof"`
}

type ChatFolderRecord_Recipient_LegacyGroupId struct {
	LegacyGroupId []byte `protobuf:"bytes,2,opt,name=legacyGroupId,proto3,oneof"`
}

type ChatFolderRecord_Recipient_GroupMasterKey struct {
	GroupMasterKey []byte `protobuf:"bytes,3,opt,name=groupMasterKey,proto3,oneof"`
}

func (*ChatFolderRecord_Recipient_Contact_) isChatFolderRecord_Recipient_Identifier() {}

func (*ChatFolderRecord_Recipient_LegacyGroupId) isChatFolderRecord_Recipient_Identifier() {}

func (*ChatFolderRecord_Recipient_GroupMasterKey) isChatFolderRecord_Recipient_Identifier() {}

type ChatFolderRecord_Recipient_Contact struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceId     string                 `protobuf:"bytes,1,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	E164          string                 `protobuf:"bytes,2,opt,name=e164,proto3" json:"e164,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatFolderRecord_Recipient_Contact) Reset() {
	*x = ChatFolderRecord_Recipient_Contact{}
	mi := &file_StorageService_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatFolderRecord_Recipient_Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatFolderRecord_Recipient_Contact) ProtoMessage() {}

func (x *ChatFolderRecord_Recipient_Contact) ProtoReflect() protoreflect.Message {
	mi := &file_StorageService_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatFolderRecord_Recipient_Contact.ProtoReflect.Descriptor instead.
func (*ChatFolderRecord_Recipient_Contact) Descriptor() ([]byte, []int) {
	return file_StorageService_proto_rawDescGZIP(), []int{14, 0, 0}
}

func (x *ChatFolderRecord_Recipient_Contact) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ChatFolderRecord_Recipient_Contact) GetE164() string {
	if x != nil {
		return x.E164
	}
	return ""
}

var File_StorageService_proto protoreflect.FileDescriptor

//go:embed StorageService.pb.raw
var file_StorageService_proto_rawDesc []byte

var (
	file_StorageService_proto_rawDescOnce sync.Once
	file_StorageService_proto_rawDescData = file_StorageService_proto_rawDesc
)

func file_StorageService_proto_rawDescGZIP() []byte {
	file_StorageService_proto_rawDescOnce.Do(func() {
		file_StorageService_proto_rawDescData = protoimpl.X.CompressGZIP(file_StorageService_proto_rawDescData)
	})
	return file_StorageService_proto_rawDescData
}

var file_StorageService_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_StorageService_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_StorageService_proto_goTypes = []any{
	(OptionalBool)(0),                                // 0: signalservice.OptionalBool
	(AvatarColor)(0),                                 // 1: signalservice.AvatarColor
	(ManifestRecord_Identifier_Type)(0),              // 2: signalservice.ManifestRecord.Identifier.Type
	(ContactRecord_IdentityState)(0),                 // 3: signalservice.ContactRecord.IdentityState
	(GroupV2Record_StorySendMode)(0),                 // 4: signalservice.GroupV2Record.StorySendMode
	(AccountRecord_PhoneNumberSharingMode)(0),        // 5: signalservice.AccountRecord.PhoneNumberSharingMode
	(AccountRecord_UsernameLink_Color)(0),            // 6: signalservice.AccountRecord.UsernameLink.Color
	(ChatFolderRecord_FolderType)(0),                 // 7: signalservice.ChatFolderRecord.FolderType
	(*StorageManifest)(nil),                          // 8: signalservice.StorageManifest
	(*StorageItem)(nil),                              // 9: signalservice.StorageItem
	(*StorageItems)(nil),                             // 10: signalservice.StorageItems
	(*ReadOperation)(nil),                            // 11: signalservice.ReadOperation
	(*WriteOperation)(nil),                           // 12: signalservice.WriteOperation
	(*ManifestRecord)(nil),                           // 13: signalservice.ManifestRecord
	(*StorageRecord)(nil),                            // 14: signalservice.StorageRecord
	(*ContactRecord)(nil),                            // 15: signalservice.ContactRecord
	(*GroupV1Record)(nil),                            // 16: signalservice.GroupV1Record
	(*GroupV2Record)(nil),                            // 17: signalservice.GroupV2Record
	(*Payments)(nil),                                 // 18: signalservice.Payments
	(*AccountRecord)(nil),                            // 19: signalservice.AccountRecord
	(*StoryDistributionListRecord)(nil),              // 20: signalservice.StoryDistributionListRecord
	(*CallLinkRecord)(nil),                           // 21: signalservice.CallLinkRecord
	(*ChatFolderRecord)(nil),                         // 22: signalservice.ChatFolderRecord
	(*ManifestRecord_Identifier)(nil),                // 23: signalservice.ManifestRecord.Identifier
	(*ContactRecord_Name)(nil),                       // 24: signalservice.ContactRecord.Name
	(*AccountRecord_PinnedConversation)(nil),         // 25: signalservice.AccountRecord.PinnedConversation
	(*AccountRecord_UsernameLink)(nil),               // 26: signalservice.AccountRecord.UsernameLink
	(*AccountRecord_IAPSubscriberData)(nil),          // 27: signalservice.AccountRecord.IAPSubscriberData
	(*AccountRecord_PinnedConversation_Contact)(nil), // 28: signalservice.AccountRecord.PinnedConversation.Contact
	(*ChatFolderRecord_Recipient)(nil),               // 29: signalservice.ChatFolderRecord.Recipient
	(*ChatFolderRecord_Recipient_Contact)(nil),       // 30: signalservice.ChatFolderRecord.Recipient.Contact
}
var file_StorageService_proto_depIdxs = []int32{
	9,  // 0: signalservice.StorageItems.items:type_name -> signalservice.StorageItem
	8,  // 1: signalservice.WriteOperation.manifest:type_name -> signalservice.StorageManifest
	9,  // 2: signalservice.WriteOperation.insertItem:type_name -> signalservice.StorageItem
	23, // 3: signalservice.ManifestRecord.identifiers:type_name -> signalservice.ManifestRecord.Identifier
	15, // 4: signalservice.StorageRecord.contact:type_name -> signalservice.ContactRecord
	16, // 5: signalservice.StorageRecord.groupV1:type_name -> signalservice.GroupV1Record
	17, // 6: signalservice.StorageRecord.groupV2:type_name -> signalservice.GroupV2Record
	19, // 7: signalservice.StorageRecord.account:type_name -> signalservice.AccountRecord
	20, // 8: signalservice.StorageRecord.storyDistributionList:type_name -> signalservice.StoryDistributionListRecord
	21, // 9: signalservice.StorageRecord.callLink:type_name -> signalservice.CallLinkRecord
	22, // 10: signalservice.StorageRecord.chatFolder:type_name -> signalservice.ChatFolderRecord
	3,  // 11: signalservice.ContactRecord.identityState:type_name -> signalservice.ContactRecord.IdentityState
	24, // 12: signalservice.ContactRecord.nickname:type_name -> signalservice.ContactRecord.Name
	1,  // 13: signalservice.ContactRecord.avatarColor:type_name -> signalservice.AvatarColor
	4,  // 14: signalservice.GroupV2Record.storySendMode:type_name -> signalservice.GroupV2Record.StorySendMode
	1,  // 15: signalservice.GroupV2Record.avatarColor:type_name -> signalservice.AvatarColor
	5,  // 16: signalservice.AccountRecord.phoneNumberSharingMode:type_name -> signalservice.AccountRecord.PhoneNumberSharingMode
	25, // 17: signalservice.AccountRecord.pinnedConversations:type_name -> signalservice.AccountRecord.PinnedConversation
	18, // 18: signalservice.AccountRecord.payments:type_name -> signalservice.Payments
	0,  // 19: signalservice.AccountRecord.storyViewReceiptsEnabled:type_name -> signalservice.OptionalBool
	26, // 20: signalservice.AccountRecord.usernameLink:type_name -> signalservice.AccountRecord.UsernameLink
	27, // 21: signalservice.AccountRecord.backupSubscriberData:type_name -> signalservice.AccountRecord.IAPSubscriberData
	1,  // 22: signalservice.AccountRecord.avatarColor:type_name -> signalservice.AvatarColor
	7,  // 23: signalservice.ChatFolderRecord.folderType:type_name -> signalservice.ChatFolderRecord.FolderType
	29, // 24: signalservice.ChatFolderRecord.includedRecipients:type_name -> signalservice.ChatFolderRecord.Recipient
	29, // 25: signalservice.ChatFolderRecord.excludedRecipients:type_name -> signalservice.ChatFolderRecord.Recipient
	2,  // 26: signalservice.ManifestRecord.Identifier.type:type_name -> signalservice.ManifestRecord.Identifier.Type
	28, // 27: signalservice.AccountRecord.PinnedConversation.contact:type_name -> signalservice.AccountRecord.PinnedConversation.Contact
	6,  // 28: signalservice.AccountRecord.UsernameLink.color:type_name -> signalservice.AccountRecord.UsernameLink.Color
	30, // 29: signalservice.ChatFolderRecord.Recipient.contact:type_name -> signalservice.ChatFolderRecord.Recipient.Contact
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_StorageService_proto_init() }
func file_StorageService_proto_init() {
	if File_StorageService_proto != nil {
		return
	}
	file_StorageService_proto_msgTypes[6].OneofWrappers = []any{
		(*StorageRecord_Contact)(nil),
		(*StorageRecord_GroupV1)(nil),
		(*StorageRecord_GroupV2)(nil),
		(*StorageRecord_Account)(nil),
		(*StorageRecord_StoryDistributionList)(nil),
		(*StorageRecord_CallLink)(nil),
		(*StorageRecord_ChatFolder)(nil),
	}
	file_StorageService_proto_msgTypes[7].OneofWrappers = []any{}
	file_StorageService_proto_msgTypes[9].OneofWrappers = []any{}
	file_StorageService_proto_msgTypes[11].OneofWrappers = []any{}
	file_StorageService_proto_msgTypes[17].OneofWrappers = []any{
		(*AccountRecord_PinnedConversation_Contact_)(nil),
		(*AccountRecord_PinnedConversation_LegacyGroupId)(nil),
		(*AccountRecord_PinnedConversation_GroupMasterKey)(nil),
	}
	file_StorageService_proto_msgTypes[19].OneofWrappers = []any{
		(*AccountRecord_IAPSubscriberData_PurchaseToken)(nil),
		(*AccountRecord_IAPSubscriberData_OriginalTransactionId)(nil),
	}
	file_StorageService_proto_msgTypes[21].OneofWrappers = []any{
		(*ChatFolderRecord_Recipient_Contact_)(nil),
		(*ChatFolderRecord_Recipient_LegacyGroupId)(nil),
		(*ChatFolderRecord_Recipient_GroupMasterKey)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_StorageService_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_StorageService_proto_goTypes,
		DependencyIndexes: file_StorageService_proto_depIdxs,
		EnumInfos:         file_StorageService_proto_enumTypes,
		MessageInfos:      file_StorageService_proto_msgTypes,
	}.Build()
	File_StorageService_proto = out.File
	file_StorageService_proto_rawDesc = nil
	file_StorageService_proto_goTypes = nil
	file_StorageService_proto_depIdxs = nil
}
